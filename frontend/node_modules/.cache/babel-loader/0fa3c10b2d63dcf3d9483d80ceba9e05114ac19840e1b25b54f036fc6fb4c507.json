{"ast":null,"code":"export async function getInvestors() {\n  try {\n    const response = await fetch(`${process.env.REACT_APP_API_URL_BASE}/investors`);\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const data = await response.json();\n    return data;\n  } catch (e) {\n    console.error(e);\n    return;\n  }\n}\nexport async function getInvestor(investorId) {\n  try {\n    const response = await fetch(`${process.env.REACT_APP_API_URL_BASE}/investors/${investorId}`);\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const data = await response.json();\n    return data;\n  } catch (e) {\n    console.error(e);\n    return;\n  }\n}\nexport async function addInvestor(investor) {\n  try {\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(investor)\n    };\n    const response = await fetch(`${process.env.REACT_APP_API_URL_BASE}/investors`, requestOptions);\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const data = await response.json();\n    return data;\n  } catch (e) {\n    console.error(e);\n    return;\n  }\n}\nexport async function updateInvestor(investor) {\n  try {\n    const requestOptions = {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(investor)\n    };\n    const response = await fetch(`${process.env.REACT_APP_API_URL_BASE}/investors/${investor.id}`, requestOptions);\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const data = await response.json();\n    return data;\n  } catch (e) {\n    console.error(e);\n    return;\n  }\n}\nexport async function deleteInvestor(investor) {\n  try {\n    const requestOptions = {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(investor)\n    };\n    const response = await fetch(`${process.env.REACT_APP_API_URL_BASE}/investors/${investor.id}`, requestOptions);\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const data = await response.json();\n    return data.success;\n  } catch (e) {\n    console.error(e);\n    return false;\n  }\n}","map":{"version":3,"names":["getInvestors","response","fetch","process","env","REACT_APP_API_URL_BASE","ok","Error","status","data","json","e","console","error","getInvestor","investorId","addInvestor","investor","requestOptions","method","headers","body","JSON","stringify","updateInvestor","id","deleteInvestor","success"],"sources":["/Users/nathansequeira/src/interviews/icapital/frontend/src/services/investors.ts"],"sourcesContent":["import { Investor } from \"../types\";\n\nexport async function getInvestors(): Promise<Investor[] | undefined> {\n    try {\n        const response: Response = await fetch(`${process.env.REACT_APP_API_URL_BASE}/investors`);\n\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const data = await response.json();\n\n        return data as Investor[];\n    } catch (e) {\n        console.error(e);\n        return;\n    }\n}\n\nexport async function getInvestor(investorId: number): Promise<Investor | undefined> {\n    try {\n        const response: Response = await fetch(`${process.env.REACT_APP_API_URL_BASE}/investors/${investorId}`);\n\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const data = await response.json();\n\n        return data as Investor;\n    } catch (e) {\n        console.error(e);\n        return;\n    }\n}\n\nexport async function addInvestor(investor: Investor): Promise<Investor | undefined> {\n    try {\n        const requestOptions = {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(investor)\n        };\n        const response: Response = await fetch(`${process.env.REACT_APP_API_URL_BASE}/investors`, requestOptions);\n\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const data = await response.json();\n\n        return data as Investor;\n    } catch (e) {\n        console.error(e);\n        return;\n    }\n}\n\nexport async function updateInvestor(investor: Investor): Promise<Investor | undefined> {\n    try {\n        const requestOptions = {\n            method: \"PUT\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(investor)\n        };\n        const response: Response = await fetch(`${process.env.REACT_APP_API_URL_BASE}/investors/${investor.id}`, requestOptions);\n\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const data = await response.json();\n\n        return data as Investor;\n    } catch (e) {\n        console.error(e);\n        return;\n    }\n}\n\nexport async function deleteInvestor(investor: Investor): Promise<boolean> {\n    try {\n        const requestOptions = {\n            method: \"DELETE\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(investor)\n        };\n        const response: Response = await fetch(`${process.env.REACT_APP_API_URL_BASE}/investors/${investor.id}`, requestOptions);\n\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const data: { success: boolean } = await response.json();\n\n        return data.success;\n    } catch (e) {\n        console.error(e);\n        return false;\n    }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}